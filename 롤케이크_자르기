import java.util.*;
class Solution {
    public int solution(int[] topping) {
        // 왼쪽과 오른쪽 토핑의 등장 횟수를 저장할 맵
        Map<Integer, Integer> leftMap  = new HashMap<>();
        Map<Integer, Integer> rightMap = new HashMap<>();

        // 오른쪽 맵 초기화 -> 전체 토핑을 오른쪽에 담아둠
        for (int t : topping) {
            rightMap.put(t, rightMap.getOrDefault(t, 0) + 1);
        }

        int answer = 0;
        int n = topping.length;
        
        // i번째 토핑을 왼쪽으로 옮기며 비교 (완전탐색)
        for (int i = 0; i < n - 1; i++) {
            int t = topping[i];

            // 왼쪽에 추가
            leftMap.merge(t, 1, Integer::sum);
            
            // 오른쪽에서 제거
            int cnt = rightMap.get(t);
            if (cnt == 1) {
                rightMap.remove(t);
            } else {
                rightMap.put(t, cnt - 1);
            }

            // 왼쪽과 오른쪽의 고유 토핑 종류 수가 같으면 공평하게 자를 수 있음
            if (leftMap.size() == rightMap.size()) {
                answer++;
            }
        }

        return answer;
    }
}
